name: Build and Test

on:
  push:
    branches: '*'
    ignore: ['main']
  pull_request:
    branches: '*'

jobs:
  analysis:
    name: Run Static Analysis
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: Install gpgme
      run: |
        sudo apt-get update
        sudo apt-get install libgpgme-dev

    - name: Set up Elixir
      uses: erlef/setup-beam@v1
      with:
        elixir-version: '1.13.2' # define the elixir version [required]
        otp-version: '24.0' # define the otp version [required]

    - uses: actions/cache@v2
      with:
        path: deps
        key: ${{ runner.os }}-mix-${{ hashFiles(format('{0}{1}', github.workspace, '/mix.lock')) }}
        restore-keys: |
          ${{ runner.os }}-mix-
    - name: Cache Dialyzer
      id: cache-dialyzer
      uses: actions/cache@v2
      with:
        path: priv/plts
        key: ${{ runner.os }}-new-plts
    - name: Install dependencies
      run: mix deps.get

    - name: Check for unused deps
      run: mix deps.unlock --check-unused

    - name: Check code formatting
      run: mix format --check-formatted

    - name: Compile
      run: MIX_ENV=devci mix compile --warnings-as-errors

    - name: Compile-time Dependencies
      run: MIX_ENV=ci mix xref graph --label compile-connected --fail-above 2

    - name: Static Analysis
      run: MIX_ENV=devci mix dialyzer --halt-exit-status
  test:
    name: Run Tests
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
      with:
        submodules: recursive

    - name: Install gpgme
      run: |
        sudo apt-get update
        sudo apt-get install libgpgme-dev

    - name: Configure GPG Key
      run: |
        gpgme-config --prefix
        echo -n "$GPG_SIGNING_KEY" | base64 --decode | gpg --import
      env:
        GPG_SIGNING_KEY: ${{ secrets.GPG_SIGNING_KEY }}

    - name: Set up Elixir
      uses: erlef/setup-beam@v1
      with:
        elixir-version: '1.12.1' # Define the elixir version [required]
        otp-version: '24.0' # Define the OTP version [required]
    - uses: actions/cache@v2
      with:
        path: deps
        key: ${{ runner.os }}-mix-${{ hashFiles(format('{0}{1}', github.workspace, '/mix.lock')) }}
        restore-keys: |
          ${{ runner.os }}-mix-
    - name: Install dependencies
      run: mix deps.get

    - name: Run tests
      run: MIX_ENV=ci mix test
